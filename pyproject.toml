[build-system]
requires = [
    "setuptools>=61",
    "setuptools_scm[toml]>=6.2",
]
build-backend = "setuptools.build_meta"

[project]
name = "logwatcher"
description = "Real-time log file watcher supporting log rotation"
dynamic = ["version"]
readme = "README.rst"

license = "MIT"  # >=3.9 only

authors = [
    {name = "Stephen Arnold"},
    {email = "stephen.arnold42@gmail.com"},
]

keywords = ["log", "tail", "watch"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Embedded Systems",
    "Topic :: Software Development :: Testing",
    "Environment :: Console",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    'importlib-resources; python_version < "3.10"',
    "platformdirs",
]

requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "flake8",
    "isort",
    "mypy>=0.990",
    "black >= 22.3.0",
    "pylint >= 3.1.0",
]
cov = [
    "coverage[toml]",
    "coverage_python_version",
]
doc = [
    "sphinx",
    "sphinx_git",
    "sphinxcontrib.apidoc",
    "myst-parser",
    "sphinx_rtd_theme<3.0.0",
]
test = [
    "pytest",
    "pytest-cov",
    "httptest",
    "requests",
]

[project.urls]
Homepage = "https://github.com/sarnold/pylogtailer"
Repository = "https://github.com/sarnold/pylogtailer.git"
Issues = "https://github.com/sarnold/pylogtailer/issues"
Changelog = "https://github.com/sarnold/pylogtailer/blob/main/CHANGELOG.rst"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools_scm]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests",]
log_cli =  false
doctest_optionflags = ["ELLIPSIS", "NORMALIZE_WHITESPACE",]
addopts = "--strict-markers"
markers = "subscript"
filterwarnings = [
    "ignore:currentThread:DeprecationWarning",
    "ignore:co_lnotab:DeprecationWarning",
]

[tool.coverage.run]
branch = true
source = ["src/logwatcher"]
omit = [
    "tests",
    ".tox/",
]

[tool.coverage.paths]
source = ["src/logwatcher"]

[tool.coverage.report]
fail_under = 80
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise AssertionError",
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 90
skip-string-normalization = true
include = '\.py$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | docs
  | dist
  | tests
)/
'''

[tool.pycln]
all = true

[tool.isort]
line_length = 72
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.bandit]
exclude_dirs = ["docs"]
skips = ["B101"]
